{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "dd9198af-82a5-459a-8151-17ebf0fe8bba",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Position</th>\n",
       "      <th>Location</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Education</th>\n",
       "      <th>Experience (Years)</th>\n",
       "      <th>Salary</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>QNXT Configuration QA/Testing SME</td>\n",
       "      <td>Ghaziabad</td>\n",
       "      <td>Female</td>\n",
       "      <td>B.Tech/B.E.</td>\n",
       "      <td>11</td>\n",
       "      <td>2014510</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Provider Data Management</td>\n",
       "      <td>New Delhi</td>\n",
       "      <td>Female</td>\n",
       "      <td>B.Tech/B.E.</td>\n",
       "      <td>24</td>\n",
       "      <td>1624349</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Accessibility Engineer QA</td>\n",
       "      <td>Noida</td>\n",
       "      <td>Female</td>\n",
       "      <td>BCA</td>\n",
       "      <td>25</td>\n",
       "      <td>1926223</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Senior Software Engineer</td>\n",
       "      <td>Jalandhar</td>\n",
       "      <td>Male</td>\n",
       "      <td>NaN</td>\n",
       "      <td>27</td>\n",
       "      <td>2403560</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Java Developer/Spring Boot</td>\n",
       "      <td>Meerut</td>\n",
       "      <td>Male</td>\n",
       "      <td>B.A</td>\n",
       "      <td>11</td>\n",
       "      <td>1128404</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                            Position   Location  Gender    Education  \\\n",
       "0  QNXT Configuration QA/Testing SME  Ghaziabad  Female  B.Tech/B.E.   \n",
       "1           Provider Data Management  New Delhi  Female  B.Tech/B.E.   \n",
       "2          Accessibility Engineer QA      Noida  Female          BCA   \n",
       "3           Senior Software Engineer  Jalandhar    Male          NaN   \n",
       "4         Java Developer/Spring Boot     Meerut    Male          B.A   \n",
       "\n",
       "   Experience (Years)   Salary  \n",
       "0                  11  2014510  \n",
       "1                  24  1624349  \n",
       "2                  25  1926223  \n",
       "3                  27  2403560  \n",
       "4                  11  1128404  "
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "df = pd.read_csv(r\"C:\\Users\\Intel\\Desktop\\INTERNSHIP\\position_salary.csv\",encoding='Latin1')\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "d0fcc4d6-4544-467b-a8e7-d1c2bb440c13",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Position</th>\n",
       "      <th>Location</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Education</th>\n",
       "      <th>Experience (Years)</th>\n",
       "      <th>Salary</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>3462</th>\n",
       "      <td>Salesforce developer</td>\n",
       "      <td>Hyderabad</td>\n",
       "      <td>Male</td>\n",
       "      <td>B.Tech/B.E.</td>\n",
       "      <td>21</td>\n",
       "      <td>816277</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3463</th>\n",
       "      <td>Salesforce developer</td>\n",
       "      <td>Bengaluru</td>\n",
       "      <td>Male</td>\n",
       "      <td>BCA</td>\n",
       "      <td>20</td>\n",
       "      <td>1786298</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3464</th>\n",
       "      <td>Salesforce developer</td>\n",
       "      <td>New Delhi</td>\n",
       "      <td>Female</td>\n",
       "      <td>NaN</td>\n",
       "      <td>28</td>\n",
       "      <td>1050400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3465</th>\n",
       "      <td>Salesforce developer</td>\n",
       "      <td>Gurugram</td>\n",
       "      <td>Male</td>\n",
       "      <td>B.A</td>\n",
       "      <td>25</td>\n",
       "      <td>764525</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3466</th>\n",
       "      <td>Salesforce developer</td>\n",
       "      <td>Pune</td>\n",
       "      <td>Male</td>\n",
       "      <td>B.Com</td>\n",
       "      <td>24</td>\n",
       "      <td>2252207</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Position   Location  Gender    Education  \\\n",
       "3462  Salesforce developer  Hyderabad    Male  B.Tech/B.E.   \n",
       "3463  Salesforce developer  Bengaluru    Male          BCA   \n",
       "3464  Salesforce developer  New Delhi  Female          NaN   \n",
       "3465  Salesforce developer   Gurugram    Male          B.A   \n",
       "3466  Salesforce developer       Pune    Male        B.Com   \n",
       "\n",
       "      Experience (Years)   Salary  \n",
       "3462                  21   816277  \n",
       "3463                  20  1786298  \n",
       "3464                  28  1050400  \n",
       "3465                  25   764525  \n",
       "3466                  24  2252207  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "749014b0-711d-4f0d-96b7-6b23a5856810",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 3467 entries, 0 to 3466\n",
      "Data columns (total 6 columns):\n",
      " #   Column              Non-Null Count  Dtype \n",
      "---  ------              --------------  ----- \n",
      " 0   Position            3448 non-null   object\n",
      " 1   Location            3467 non-null   object\n",
      " 2   Gender              3443 non-null   object\n",
      " 3   Education           3391 non-null   object\n",
      " 4   Experience (Years)  3467 non-null   int64 \n",
      " 5   Salary              3467 non-null   int64 \n",
      "dtypes: int64(2), object(4)\n",
      "memory usage: 162.6+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "ea619c8a-2363-47e7-9ac8-2529b890c171",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Experience (Years)</th>\n",
       "      <th>Salary</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>3467.000000</td>\n",
       "      <td>3.467000e+03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>16.639746</td>\n",
       "      <td>1.487459e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>6.935259</td>\n",
       "      <td>5.776934e+05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>5.000000</td>\n",
       "      <td>5.026890e+05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>11.000000</td>\n",
       "      <td>9.818155e+05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>17.000000</td>\n",
       "      <td>1.475343e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>23.000000</td>\n",
       "      <td>1.985568e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>28.000000</td>\n",
       "      <td>2.499925e+06</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Experience (Years)        Salary\n",
       "count         3467.000000  3.467000e+03\n",
       "mean            16.639746  1.487459e+06\n",
       "std              6.935259  5.776934e+05\n",
       "min              5.000000  5.026890e+05\n",
       "25%             11.000000  9.818155e+05\n",
       "50%             17.000000  1.475343e+06\n",
       "75%             23.000000  1.985568e+06\n",
       "max             28.000000  2.499925e+06"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "5c93257b-d601-4ad4-86bf-52b034080d8a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Position              19\n",
       "Location               0\n",
       "Gender                24\n",
       "Education             76\n",
       "Experience (Years)     0\n",
       "Salary                 0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "c93caa9f-0fcc-44d3-bb77-214d506f879c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Position              0\n",
       "Location              0\n",
       "Gender                0\n",
       "Education             0\n",
       "Experience (Years)    0\n",
       "Salary                0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = df.dropna()\n",
    "df.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "7daaeb94-0bf0-4fce-8dd1-7f4cc925740c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(3348, 6)"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "35131c33-a468-460f-8eb4-0266a36a9d68",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0       2014510\n",
       "1       1624349\n",
       "2       1926223\n",
       "4       1128404\n",
       "5       2090495\n",
       "         ...   \n",
       "3461     604653\n",
       "3462     816277\n",
       "3463    1786298\n",
       "3465     764525\n",
       "3466    2252207\n",
       "Name: Salary, Length: 3348, dtype: int64"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Salary']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "5e2916e8-2c5d-4159-b0b6-84387fd1179f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Position</th>\n",
       "      <th>Location</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Education</th>\n",
       "      <th>Experience (Years)</th>\n",
       "      <th>Salary</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>QNXT Configuration QA/Testing SME</td>\n",
       "      <td>Ghaziabad</td>\n",
       "      <td>Female</td>\n",
       "      <td>B.Tech/B.E.</td>\n",
       "      <td>11</td>\n",
       "      <td>2014.510</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Provider Data Management</td>\n",
       "      <td>New Delhi</td>\n",
       "      <td>Female</td>\n",
       "      <td>B.Tech/B.E.</td>\n",
       "      <td>24</td>\n",
       "      <td>1624.349</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Accessibility Engineer QA</td>\n",
       "      <td>Noida</td>\n",
       "      <td>Female</td>\n",
       "      <td>BCA</td>\n",
       "      <td>25</td>\n",
       "      <td>1926.223</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Senior Software Engineer</td>\n",
       "      <td>Jalandhar</td>\n",
       "      <td>Male</td>\n",
       "      <td>NaN</td>\n",
       "      <td>27</td>\n",
       "      <td>2403.560</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Java Developer/Spring Boot</td>\n",
       "      <td>Meerut</td>\n",
       "      <td>Male</td>\n",
       "      <td>B.A</td>\n",
       "      <td>11</td>\n",
       "      <td>1128.404</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                            Position   Location  Gender    Education  \\\n",
       "0  QNXT Configuration QA/Testing SME  Ghaziabad  Female  B.Tech/B.E.   \n",
       "1           Provider Data Management  New Delhi  Female  B.Tech/B.E.   \n",
       "2          Accessibility Engineer QA      Noida  Female          BCA   \n",
       "3           Senior Software Engineer  Jalandhar    Male          NaN   \n",
       "4         Java Developer/Spring Boot     Meerut    Male          B.A   \n",
       "\n",
       "   Experience (Years)    Salary  \n",
       "0                  11  2014.510  \n",
       "1                  24  1624.349  \n",
       "2                  25  1926.223  \n",
       "3                  27  2403.560  \n",
       "4                  11  1128.404  "
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Salary']/=1000\n",
    "df.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "id": "186fe323-36e7-44d0-b7f0-da9a098b9478",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[Text(0.5, 1.0, 'Salary_histogram'),\n",
       " Text(0.5, 0, 'Salary(lakh)'),\n",
       " Text(0, 0.5, 'People count')]"
      ]
     },
     "execution_count": 91,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "plt.figure(figsize =(12,8))\n",
    "sns.histplot(df['Salary'], bins = 40).set(title = \"Salary_histogram\",xlabel='Salary(lakh)',ylabel='People count')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "id": "7edc3b81-8a32-42b4-9184-b81ca39c1203",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[Text(0.5, 1.0, 'Experience_histogram'),\n",
       " Text(0.5, 0, 'Experience (Years)'),\n",
       " Text(0, 0.5, 'People count')]"
      ]
     },
     "execution_count": 93,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize =(12,8))\n",
    "sns.histplot(df['Experience (Years)'],discrete = True).set(title = \"Experience_histogram\",xlabel='Experience (Years)',ylabel='People count')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "id": "74dbd4e9-a54e-4d83-b0a8-86237936ee85",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[Text(0.5, 1.0, 'Salary_histogram'), Text(0.5, 0, 'Salary(thousand ruppees)')]"
      ]
     },
     "execution_count": 95,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize = (12,8))\n",
    "sns.countplot(df, x='Gender').set(title='Salary_histogram',xlabel= 'Salary(thousand ruppees)')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "19b2ee03-9f58-4162-a297-7d3feb050662",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count    1305.000000\n",
       "mean     1484.506853\n",
       "std       578.877462\n",
       "min       502.689000\n",
       "25%       968.438000\n",
       "50%      1473.867000\n",
       "75%      1988.284000\n",
       "max      2499.499000\n",
       "Name: Salary, dtype: float64"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[df['Gender']=='Female']['Salary'].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "caa82843-70dc-42ac-8361-8758be717a8e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count    2138.000000\n",
       "mean     1489.858246\n",
       "std       577.003098\n",
       "min       502.893000\n",
       "25%       988.322500\n",
       "50%      1479.196000\n",
       "75%      1980.305750\n",
       "max      2499.925000\n",
       "Name: Salary, dtype: float64"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[df['Gender']=='Male']['Salary'].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "4606c2f4-4a80-4f6c-a779-87f6a3fe1f56",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Education\n",
       "B.Tech/B.E.     1307\n",
       "B.Sc             497\n",
       "B.Com            483\n",
       "BCA              416\n",
       "B.A              351\n",
       "Diploma          147\n",
       "B.B.A/ B.M.S     107\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 80,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Education'].value_counts()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "5a0996a9-f688-4cde-b158-7990e7b58364",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[Text(0.5, 1.0, 'Education type ratio')]"
      ]
     },
     "execution_count": 88,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 600x200 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize =(6,2))\n",
    "df = df[df.Education.apply(lambda x:df.Education.value_counts()[x]>100)]\n",
    "sns.countplot(df, x='Education').set(title = 'Education type ratio')\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "31d5966a-9bc9-4127-a429-3393d9546397",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Location\n",
       "New Delhi    694\n",
       "Bengaluru    401\n",
       "Noida        395\n",
       "Pune         373\n",
       "Hyderabad    234\n",
       "Gurugram     184\n",
       "Mumbai       176\n",
       "Chennai      137\n",
       "Kolkata      121\n",
       "Lucknow       53\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.Location.value_counts().head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "31ce88cc-1def-4390-bff5-800d628de71e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: ylabel='count'>"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x200 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(12,2))\n",
    "sns.countplot(df[df.Location.apply(lambda x: df.Location.value_counts()[x]>100)])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "45a79a11-090c-4dcc-9fcf-b6a576985e31",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Position</th>\n",
       "      <th>Location</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Education</th>\n",
       "      <th>Experience (Years)</th>\n",
       "      <th>Salary</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>QNXT Configuration QA/Testing SME</td>\n",
       "      <td>Ghaziabad</td>\n",
       "      <td>Female</td>\n",
       "      <td>B.Tech/B.E.</td>\n",
       "      <td>11</td>\n",
       "      <td>2014.510</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Provider Data Management</td>\n",
       "      <td>New Delhi</td>\n",
       "      <td>Female</td>\n",
       "      <td>B.Tech/B.E.</td>\n",
       "      <td>24</td>\n",
       "      <td>1624.349</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Accessibility Engineer QA</td>\n",
       "      <td>Noida</td>\n",
       "      <td>Female</td>\n",
       "      <td>BCA</td>\n",
       "      <td>25</td>\n",
       "      <td>1926.223</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Senior Software Engineer</td>\n",
       "      <td>Jalandhar</td>\n",
       "      <td>Male</td>\n",
       "      <td>NaN</td>\n",
       "      <td>27</td>\n",
       "      <td>2403.560</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Java Developer/Spring Boot</td>\n",
       "      <td>Meerut</td>\n",
       "      <td>Male</td>\n",
       "      <td>B.A</td>\n",
       "      <td>11</td>\n",
       "      <td>1128.404</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                            Position   Location  Gender    Education  \\\n",
       "0  QNXT Configuration QA/Testing SME  Ghaziabad  Female  B.Tech/B.E.   \n",
       "1           Provider Data Management  New Delhi  Female  B.Tech/B.E.   \n",
       "2          Accessibility Engineer QA      Noida  Female          BCA   \n",
       "3           Senior Software Engineer  Jalandhar    Male          NaN   \n",
       "4         Java Developer/Spring Boot     Meerut    Male          B.A   \n",
       "\n",
       "   Experience (Years)    Salary  \n",
       "0                  11  2014.510  \n",
       "1                  24  1624.349  \n",
       "2                  25  1926.223  \n",
       "3                  27  2403.560  \n",
       "4                  11  1128.404  "
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "86404ae0-be1a-49a3-9cac-71516a4e34d5",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.to_csv('cleaned_data.csv',index = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "dd65619f-8d5e-4f70-9152-ea4ed36ddf54",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e66647de-3fa2-42ea-a3df-8e527203f813",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ed3889a8-9bf0-45a7-951a-12b19dbac7a5",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a770dadd-f791-4d8f-a0dc-58960d76bfae",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
